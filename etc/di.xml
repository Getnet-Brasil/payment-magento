<?xml version="1.0"?>
<!--
/**
 * Copyright Â© Getnet. All rights reserved.
 *
 * @author    Bruno Elisei <brunoelisei@o2ti.com>
 * See LICENSE for license details.
 */
-->

<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
    <!-- Plugin - Vault not duplicated -->
    <type name="Magento\Vault\Api\PaymentTokenManagementInterface">
        <plugin name="getnet_vault"
                type="Getnet\PaymentMagento\Plugin\PaymentToken"
                sortOrder="1"/>
    </type>

    <!-- Console -->
    <type name="Magento\Framework\Console\CommandList">
        <arguments>
            <argument name="commands" xsi:type="array">
                <!-- <item name="refreshToken" xsi:type="object">Getnet\PaymentMagento\Console\Command\Basic\RefreshToken</item> -->
                <!-- <item name="payment_release" xsi:type="object">Getnet\PaymentMagento\Console\Command\Marketplace\Release</item> -->
            </argument>
        </arguments>
    </type>

    <!-- API - Tokenize Card Number -->
    <preference for="Getnet\PaymentMagento\Api\Data\NumberTokenInterface" type="Getnet\PaymentMagento\Model\Data\NumberToken" />
    <preference for="Getnet\PaymentMagento\Api\NumberTokenManagementInterface" type="Getnet\PaymentMagento\Model\NumberTokenManagement" />
    <preference for="Getnet\PaymentMagento\Api\GuestNumberTokenManagementInterface" type="Getnet\PaymentMagento\Model\GuestNumberTokenManagement" />
    
    <!-- API - Create Vault -->
    <preference for="Getnet\PaymentMagento\Api\CreateVaultManagementInterface" type="Getnet\PaymentMagento\Model\CreateVaultManagement" />

    <!-- API - Card Id Details -->
    <preference for="Getnet\PaymentMagento\Api\Data\CardIdInterface" type="Getnet\PaymentMagento\Model\Data\CardId" />
    <preference for="Getnet\PaymentMagento\Api\CardIdManagementInterface" type="Getnet\PaymentMagento\Model\CardIdManagement" />

    <!-- API - Interest -->
    <preference for="Getnet\PaymentMagento\Api\Data\InstallmentSelectedInterface" type="Getnet\PaymentMagento\Model\Api\Data\InstallmentSelected" />
    <preference for="Getnet\PaymentMagento\Api\InterestManagementInterface" type="Getnet\PaymentMagento\Model\Api\InterestManagement" />
    <preference for="Getnet\PaymentMagento\Api\GuestInterestManagementInterface" type="Getnet\PaymentMagento\Model\Api\GuestInterestManagement" />

    <!-- API - For Two Cc Interest -->
    <preference for="Getnet\PaymentMagento\Api\TwoCc\Data\AmountForCalcInterface" type="Getnet\PaymentMagento\Model\Api\TwoCc\Data\AmountForCalc" />
    <preference for="Getnet\PaymentMagento\Api\TwoCc\Data\IdxInTwoCcInterface" type="Getnet\PaymentMagento\Model\Api\TwoCc\Data\IdxInTwoCc" />
    <preference for="Getnet\PaymentMagento\Api\TwoCc\Data\TwoCcInstallmentInterface" type="Getnet\PaymentMagento\Model\Api\TwoCc\Data\TwoCcInstallment" />
    <preference for="Getnet\PaymentMagento\Api\TwoCc\TwoCcInterestManagementInterface" type="Getnet\PaymentMagento\Model\Api\TwoCc\TwoCcInterestManagement" />
    <preference for="Getnet\PaymentMagento\Api\TwoCc\GuestTwoCcInterestManagementInterface" type="Getnet\PaymentMagento\Model\Api\TwoCc\GuestTwoCcInterestManagement" />

    <!-- All - Adapter Interface -->
    <preference for="Getnet\PaymentMagento\Gateway\Data\Order\OrderAdapterInterface" type="Getnet\PaymentMagento\Gateway\Data\Order\OrderAdapter"/>
    <preference for="Getnet\PaymentMagento\Gateway\Data\Order\AddressAdapterInterface" type="Getnet\PaymentMagento\Gateway\Data\Order\AddressAdapter"/>

    <!-- Payment Method Facade Configuration -->
    <virtualType name="PaymentMagentoBaseFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">Getnet\PaymentMagento\Model\Ui\ConfigProviderBase::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">PaymentMagentoValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">PaymentMagentoCcCommandPool</argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoCcFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">Getnet\PaymentMagento\Model\Ui\ConfigProviderCc::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Getnet\PaymentMagento\Block\Sales\Form\Cc</argument>
            <argument name="infoBlockType" xsi:type="string">Getnet\PaymentMagento\Block\Sales\Info\Cc</argument>
            <argument name="valueHandlerPool" xsi:type="object">PaymentMagentoCcValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">PaymentMagentoCcCommandPool</argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoCcVaultFacade" type="Magento\Vault\Model\Method\Vault">
        <arguments>
            <argument name="code" xsi:type="const">Getnet\PaymentMagento\Model\Ui\ConfigProviderCc::VAULT_CODE</argument>
            <argument name="config" xsi:type="object">PaymentMagentoVaultPaymentConfig</argument>
            <argument name="valueHandlerPool" xsi:type="object">PaymentMagentoVaultPaymentValueHandlerPool</argument>
            <argument name="vaultProvider" xsi:type="object">PaymentMagentoCcFacade</argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoTwoCcFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">Getnet\PaymentMagento\Model\Ui\ConfigProviderTwoCc::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Getnet\PaymentMagento\Block\Sales\Form\TwoCc</argument>
            <argument name="infoBlockType" xsi:type="string">Getnet\PaymentMagento\Block\Sales\Info\TwoCc</argument>
            <argument name="valueHandlerPool" xsi:type="object">PaymentMagentoTwoCcValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">PaymentMagentoTwoCcCommandPool</argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoBoletoFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">Getnet\PaymentMagento\Model\Ui\ConfigProviderBoleto::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Getnet\PaymentMagento\Block\Sales\Form\Boleto</argument>
            <argument name="infoBlockType" xsi:type="string">Getnet\PaymentMagento\Block\Sales\Info\Boleto</argument>
            <argument name="valueHandlerPool" xsi:type="object">PaymentMagentoBoletoValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">PaymentMagentoBoletoCommandPool</argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoPixFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">Getnet\PaymentMagento\Model\Ui\ConfigProviderPix::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Getnet\PaymentMagento\Block\Sales\Form\Pix</argument>
            <argument name="infoBlockType" xsi:type="string">Getnet\PaymentMagento\Block\Sales\Info\Pix</argument>
            <argument name="valueHandlerPool" xsi:type="object">PaymentMagentoPixValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">PaymentMagentoPixCommandPool</argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoWalletFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">Getnet\PaymentMagento\Model\Ui\ConfigProviderWallet::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Getnet\PaymentMagento\Block\Sales\Form\Wallet</argument>
            <argument name="infoBlockType" xsi:type="string">Getnet\PaymentMagento\Block\Sales\Info\Wallet</argument>
            <argument name="valueHandlerPool" xsi:type="object">PaymentMagentoWalletValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">PaymentMagentoWalletCommandPool</argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoGetpayFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">Getnet\PaymentMagento\Model\Ui\ConfigProviderGetpay::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Getnet\PaymentMagento\Block\Sales\Form\Getpay</argument>
            <argument name="infoBlockType" xsi:type="string">Getnet\PaymentMagento\Block\Sales\Info\Getpay</argument>
            <argument name="valueHandlerPool" xsi:type="object">PaymentMagentoGetpayValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">PaymentMagentoGetpayCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- All - Executors -->
    <type name="Magento\Payment\Gateway\Command\CommandManagerPool">
        <arguments>
            <argument name="executors" xsi:type="array">
                <item name="getnet_paymentmagento_cc" xsi:type="string">PaymentMagentoCcCommandManager</item>
                <item name="getnet_paymentmagento_cc_vault" xsi:type="string">PaymentMagentoCcCommandManager</item>
                <item name="getnet_paymentmagento_two_cc" xsi:type="string">PaymentMagentoTwoCcCommandManager</item>
                <item name="getnet_paymentmagento_boleto" xsi:type="string">PaymentMagentoBoletoCommandManager</item>
                <item name="getnet_paymentmagento_pix" xsi:type="string">PaymentMagentoPixCommandManager</item>
                <item name="getnet_paymentmagento_wallet" xsi:type="string">PaymentMagentoWalletCommandManager</item>
                <item name="getnet_paymentmagento_getpay" xsi:type="string">PaymentMagentoGetpayCommandManager</item>
            </argument>
        </arguments>
    </type>

    <!-- All - Configuration reader -->
    <virtualType name="PaymentMagentoBaseConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">\Getnet\PaymentMagento\Model\Ui\ConfigProviderBase::CODE</argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoCcConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">\Getnet\PaymentMagento\Model\Ui\ConfigProviderCc::CODE</argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoVaultPaymentConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">\Getnet\PaymentMagento\Model\Ui\ConfigProviderCc::VAULT_CODE</argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoTwoCcConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">\Getnet\PaymentMagento\Model\Ui\ConfigProviderTwoCc::CODE</argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoBoletoConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">\Getnet\PaymentMagento\Model\Ui\ConfigProviderBoleto::CODE</argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoPixConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">\Getnet\PaymentMagento\Model\Ui\ConfigProviderPix::CODE</argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoWalletConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">\Getnet\PaymentMagento\Model\Ui\ConfigProviderWallet::CODE</argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoGetpayConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">\Getnet\PaymentMagento\Model\Ui\ConfigProviderGetpay::CODE</argument>
        </arguments>
    </virtualType>

    <!-- All - Block Info -->
    <type name="Getnet\PaymentMagento\Block\Sales\Info\Cc">
        <arguments>
            <argument name="config" xsi:type="object">PaymentMagentoCcConfig</argument>
        </arguments>
    </type>

    <type name="Getnet\PaymentMagento\Block\Sales\Info\TwoCc">
        <arguments>
            <argument name="config" xsi:type="object">PaymentMagentoTwoCcConfig</argument>
        </arguments>
    </type>

    <type name="Getnet\PaymentMagento\Block\Sales\Info\Boleto">
        <arguments>
            <argument name="config" xsi:type="object">PaymentMagentoBoletoConfig</argument>
        </arguments>
    </type>

    <type name="Getnet\PaymentMagento\Block\Sales\Info\Pix">
        <arguments>
            <argument name="config" xsi:type="object">PaymentMagentoPixConfig</argument>
        </arguments>
    </type>

    <type name="Getnet\PaymentMagento\Block\Sales\Info\Wallet">
        <arguments>
            <argument name="config" xsi:type="object">PaymentMagentoWalletConfig</argument>
        </arguments>
    </type>

    <type name="Getnet\PaymentMagento\Block\Sales\Info\Getpay">
        <arguments>
            <argument name="config" xsi:type="object">PaymentMagentoGetpayConfig</argument>
        </arguments>
    </type>

    <!-- Boleto - Commands infrastructure -->
    <virtualType name="PaymentMagentoBoletoCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">PaymentMagentoBoletoOrderCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Boleto - Order Commands -->
    <virtualType name="PaymentMagentoBoletoOrderCommand" type="Getnet\PaymentMagento\Gateway\Command\PaymentCommand">
        <arguments>
            <argument name="commandPool" xsi:type="object">PaymentMagentoBoletoCommandPool</argument>
            <argument name="requestBuilder" xsi:type="object">PaymentMagentoBoletoOrderRequest</argument>
            <argument name="handler" xsi:type="object">PaymentMagentoBoletoOrderResponseHandlerComposite</argument>
            <argument name="transferFactory" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\Client\Boleto\CreateClient</argument>
            <argument name="validator" xsi:type="object">PaymentMagentoTransactionValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">PaymentMagentoVirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>

    <!-- Boleto - Order Request -->
    <virtualType name="PaymentMagentoBoletoOrderRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="storeId" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\StoreIdDataRequest</item>

                <item name="boleto_init_schema" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Boleto\BoletoInitSchemaDataRequest</item>
                <item name="data_currency" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Boleto\Data\CurrencyDataRequest</item>
                <item name="data_amount" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Boleto\Data\AmountDataRequest</item>
                <item name="data_order" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Boleto\Data\Order\OrderDataRequest</item>
                <item name="data_payment" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Boleto\Data\Payment\PaymentDataRequest</item>
                <item name="data_customer" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Boleto\Data\Customer\CustomerDataRequest</item>
                <item name="data_customer_address" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Boleto\Data\Customer\CustomerBillingAddressDataRequest</item>
                <item name="data_customer_taxDocument" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Boleto\Data\Customer\TaxDocumentDataRequest</item>
                <item name="data_boleto" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Boleto\Data\Boleto\PaymentDataRequest</item>

                <item name="splitPayment" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\SplitPaymentDataRequest</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Boleto - Order Payment Response handlers -->
    <virtualType name="PaymentMagentoBoletoOrderResponseHandlerComposite" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="extOrdId" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\Boleto\ExtOrdIdHandler</item>
                <item name="txnId" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\Boleto\TxnIdHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Pix - Commands infrastructure -->
    <virtualType name="PaymentMagentoPixCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">PaymentMagentoPixOrderCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Pix - Order Commands -->
    <virtualType name="PaymentMagentoPixOrderCommand" type="Getnet\PaymentMagento\Gateway\Command\PaymentCommand">
        <arguments>
            <argument name="commandPool" xsi:type="object">PaymentMagentoPixCommandPool</argument>
            <argument name="requestBuilder" xsi:type="object">PaymentMagentoPixOrderRequest</argument>
            <argument name="handler" xsi:type="object">PaymentMagentoPixOrderResponseHandlerComposite</argument>
            <argument name="transferFactory" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\Client\Pix\CreateClient</argument>
            <argument name="validator" xsi:type="object">PaymentMagentoTransactionValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">PaymentMagentoVirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>

    <!-- Pix - Order Request -->
    <virtualType name="PaymentMagentoPixOrderRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="storeId" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\StoreIdDataRequest</item>
                <item name="pixExpiration" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Pix\ExpirationDataRequest</item>

                <item name="idempotency_key" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Pix\IdempotencyKeyDataRequest</item>
                <item name="amount" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Pix\AmountDataRequest</item>
                <item name="currency" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Pix\CurrencyDataRequest</item>
                <item name="order_id" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Pix\OrderIdDataRequest</item>
                <item name="customer" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Pix\CustomerIdDataRequest</item>

                <item name="splitPayment" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\SplitPaymentDataRequest</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Pix - Order Payment Response handlers -->
    <virtualType name="PaymentMagentoPixOrderResponseHandlerComposite" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="extOrdId" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\Pix\ExtOrdIdHandler</item>
                <item name="txnIdPix" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\Pix\TxnIdHandler</item>
            </argument>
        </arguments>
    </virtualType>
    
    <!-- Wallet - Commands infrastructure -->
    <virtualType name="PaymentMagentoWalletCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">PaymentMagentoWalletOrderCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">WalletFetchTransactionInfoCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Wallet - Order Commands -->
    <virtualType name="PaymentMagentoWalletOrderCommand" type="Getnet\PaymentMagento\Gateway\Command\PaymentCommand">
        <arguments>
            <argument name="commandPool" xsi:type="object">PaymentMagentoWalletCommandPool</argument>
            <argument name="requestBuilder" xsi:type="object">PaymentMagentoWalletOrderRequest</argument>
            <argument name="handler" xsi:type="object">PaymentMagentoWalletOrderResponseHandlerComposite</argument>
            <argument name="transferFactory" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\Client\V1\Wallet\CreateClient</argument>
            <argument name="validator" xsi:type="object">PaymentMagentoTransactionValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">PaymentMagentoVirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>

    <!-- Wallet - Order Request -->
    <virtualType name="PaymentMagentoWalletOrderRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="storeId" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\StoreIdDataRequest</item>

                <item name="amount" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\V1\Wallet\AmountDataRequest</item>
                <item name="currency" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\V1\Wallet\CurrencyDataRequest</item>
                <item name="order" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\V1\Wallet\OrderDataRequest</item>
                <item name="customer" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\V1\Wallet\CustomerDataRequest</item>
                <item name="customerBillingAddress" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\V1\Wallet\CustomerBillingAddressDataRequest</item>
                <item name="shippings" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\V1\Wallet\ShippingsDataRequest</item>
                <item name="taxDocument" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\V1\Wallet\TaxDocumentDataRequest</item>
                <item name="device" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\V1\Wallet\DeviceDataRequest</item>
                <item name="paymentMethod" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\V1\Wallet\WalletPaymentDataRequest</item>

                <item name="splitPayment" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\SplitPaymentDataRequest</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Wallet - Order Payment Response handlers -->
    <virtualType name="PaymentMagentoWalletOrderResponseHandlerComposite" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="extOrdId" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\V1\Wallet\ExtOrdIdHandler</item>
                <item name="txnId" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\V1\Wallet\TxnIdHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Wallet - Fetch Transaction Info Command -->
    <virtualType name="WalletFetchTransactionInfoCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">WalletFetchTransactionInfoRequest</argument>
            <argument name="transferFactory" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\Client\V1\Wallet\Operations\FetchTransactionInfoClient</argument>
            <argument name="handler" xsi:type="object">WalletFetchTransactionInfoResponseHandlerComposite</argument>
            <argument name="validator" xsi:type="object">PaymentMagentoTransactionValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">PaymentMagentoVirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>

    <!-- Wallet - Fetch Transaction Info Request -->
    <virtualType name="WalletFetchTransactionInfoRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="storeId" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\StoreIdDataRequest</item>
                <item name="transaction" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\V1\Wallet\Operations\FetchTransactionInfoRequest</item>
            </argument>
        </arguments>
    </virtualType>
    
    <!-- Wallet - Fetch Transaction Info handlers -->
    <virtualType name="WalletFetchTransactionInfoResponseHandlerComposite" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="accept" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\V1\Wallet\Operations\FetchTransactionInfoHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Getpay - Commands infrastructure -->
    <virtualType name="PaymentMagentoGetpayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">PaymentMagentoGetpayOrderCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">GetpayFetchTransactionInfoCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Getpay - Order Commands -->
    <virtualType name="PaymentMagentoGetpayOrderCommand" type="Getnet\PaymentMagento\Gateway\Command\PaymentCommand">
        <arguments>
            <argument name="commandPool" xsi:type="object">PaymentMagentoGetpayCommandPool</argument>
            <argument name="requestBuilder" xsi:type="object">PaymentMagentoGetpayOrderRequest</argument>
            <argument name="handler" xsi:type="object">PaymentMagentoGetpayOrderResponseHandlerComposite</argument>
            <argument name="transferFactory" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\Client\V1\Getpay\CreateClient</argument>
            <argument name="validator" xsi:type="object">PaymentMagentoTransactionValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">PaymentMagentoVirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>

    <!-- Getpay - Order Request -->
    <virtualType name="PaymentMagentoGetpayOrderRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="storeId" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\StoreIdDataRequest</item>

                <item name="order" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\V1\Getpay\OrderDataGetpayRequest</item>
                <item name="payment" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\V1\Getpay\GetpayPaymentDataRequest</item>

                <item name="splitPayment" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\SplitPaymentDataRequest</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Getpay - Order Payment Response handlers -->
    <virtualType name="PaymentMagentoGetpayOrderResponseHandlerComposite" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="extOrdId" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\V1\Getpay\ExtOrdIdHandler</item>
                <item name="txnIdGetpay" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\V1\Getpay\TxnIdHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Getpay - Fetch Transaction Info Command -->
    <virtualType name="GetpayFetchTransactionInfoCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">GetpayFetchTransactionInfoRequest</argument>
            <argument name="transferFactory" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\Client\V1\Getpay\Operations\FetchTransactionInfoClient</argument>
            <argument name="handler" xsi:type="object">GetpayFetchTransactionInfoResponseHandlerComposite</argument>
            <argument name="validator" xsi:type="object">PaymentMagentoTransactionValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">PaymentMagentoVirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>

    <!-- Getpay - Fetch Transaction Info Request -->
    <virtualType name="GetpayFetchTransactionInfoRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="idempotency_key" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\IdempotencyKeyDataRequest</item>
                <item name="storeId" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\StoreIdDataRequest</item>
                <item name="transaction" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\V1\Getpay\Operations\FetchTransactionInfoRequest</item>
            </argument>
        </arguments>
    </virtualType>
    
    <!-- Getpay - Fetch Transaction Info handlers -->
    <virtualType name="GetpayFetchTransactionInfoResponseHandlerComposite" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="accept" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\V1\Getpay\Operations\FetchTransactionInfoHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Cc - Commands infrastructure -->
    <virtualType name="PaymentMagentoCcCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="authorize" xsi:type="string">PaymentMagentoAuthorizeCcCommand</item>
                <item name="capture" xsi:type="string">PaymentMagentoCaptureCcCommand</item>
                <item name="refund" xsi:type="string">PaymentMagentoRefundCommand</item>
                <item name="cancel" xsi:type="string">PaymentMagentoDenyPaymentCommand</item>
                <item name="void" xsi:type="string">PaymentMagentoDenyPaymentCommand</item>
                <item name="accept_payment" xsi:type="string">PaymentMagentoAcceptPaymentCommand</item>
                <item name="deny_payment" xsi:type="string">PaymentMagentoDenyPaymentCommand</item>
                <item name="vault_authorize" xsi:type="string">PaymentMagentoCcVaultAuthorizeCommand</item>
                <item name="vault_sale" xsi:type="string">PaymentMagentoCcVaultCaptureCommand</item>
                <item name="vault_capture" xsi:type="string">PaymentMagentoCcVaultCaptureCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Cc - Request -->
    <virtualType name="PaymentMagentoCcAuthorizationRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="storeId" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\StoreIdDataRequest</item>
                <item name="card_init_schema" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\CardInitSchemaDataRequest</item>

                <item name="data_amountTotal" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Data\AmountDataRequest</item>
                <item name="data_currency" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Data\CurrencyDataRequest</item>
                <item name="data_customer_id" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Data\CustomerIdDataRequest</item>
                <item name="data_payment_data" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Data\Payment\PaymentDataRequest</item>
                <item name="data_payment_data_vault" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Data\Payment\VaultDataBuilder</item>

                <item name="data_additional_data" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Data\Additional\AdditionalInitSchemaDataRequest</item>
                
                <item name="data_additional_data_device" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Data\Additional\Device\DeviceDataRequest</item>

                <item name="data_additional_data_customer" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Data\Additional\Customer\CustomerDataRequest</item>
                <item name="data_additional_data_customer_document" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Data\Additional\Customer\TaxDocumentDataRequest</item>
                <item name="data_additional_data_customer_address" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Data\Additional\Customer\AddressDataRequest</item>

                <item name="data_additional_data_order" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Data\Additional\Order\Items\ItemsDataRequest</item>
                

                <item name="splitPayment" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\SplitPaymentDataRequest</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Cc - Commands Authorize -->
    <virtualType name="PaymentMagentoAuthorizeCcCommand" type="Getnet\PaymentMagento\Gateway\Command\PaymentCommand">
        <arguments>
            <argument name="commandPool" xsi:type="object">PaymentMagentoCcCommandPool</argument>
            <argument name="requestBuilder" xsi:type="object">PaymentMagentoCcAuthorizationRequest</argument>
            <argument name="handler" xsi:type="object">PaymentMagentoAuthorizationResponseHandlerComposite</argument>
            <argument name="transferFactory" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\Client\Card\CreateClient</argument>
            <argument name="validator" xsi:type="object">PaymentMagentoTransactionValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">PaymentMagentoVirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>

    <!-- Cc - Authorization Payment Response handlers -->
    <virtualType name="PaymentMagentoAuthorizationResponseHandlerComposite" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="extOrdId" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\Card\ExtOrdIdHandler</item>
                <item name="txnIdCc" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\Card\TxnIdHandler</item>
                <item name="transaction" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\Card\TransactionAuthorizationHandler</item>
                <item name="vaultBuilder" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\Card\VaultDetailsHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Cc - Capture Commands -->
    <virtualType name="PaymentMagentoCaptureCcCommand" type="Getnet\PaymentMagento\Gateway\Command\PaymentCommand">
        <arguments>
            <argument name="commandPool" xsi:type="object">PaymentMagentoCcCommandPool</argument>
            <argument name="requestBuilder" xsi:type="object">PaymentMagentoCcAuthorizationRequest</argument>
            <argument name="handler" xsi:type="object">PaymentMagentoCaptureResponseHandlerComposite</argument>
            <argument name="transferFactory" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\Client\Card\CreateClient</argument>
            <argument name="validator" xsi:type="object">PaymentMagentoTransactionValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">PaymentMagentoVirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    
    <!-- Cc - Capture Payment Response handlers -->
    <virtualType name="PaymentMagentoCaptureResponseHandlerComposite" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="extOrdId" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\Card\ExtOrdIdHandler</item>
                <item name="txnIdCc" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\Card\TxnIdHandler</item>
                <item name="transaction" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\Card\TransactionCaptureHandler</item>
                <item name="vaultBuilder" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\Card\VaultDetailsHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Vault - Capture Command-->
    <virtualType name="PaymentMagentoCcVaultCaptureCommand" type="Getnet\PaymentMagento\Gateway\Command\PaymentCommand">
        <arguments>
            <argument name="commandPool" xsi:type="object">PaymentMagentoCcCommandPool</argument>
            <argument name="requestBuilder" xsi:type="object">PaymentMagentoCcVaultRequest</argument>
            <argument name="handler" xsi:type="object">PaymentMagentoCcVaultCaptureResponseHandlerComposite</argument>
            <argument name="transferFactory" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\Client\Card\CreateClient</argument>
            <argument name="validator" xsi:type="object">PaymentMagentoTransactionValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">PaymentMagentoVirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>

    <!-- Vault - Authorize Command-->
    <virtualType name="PaymentMagentoCcVaultAuthorizeCommand" type="Getnet\PaymentMagento\Gateway\Command\PaymentCommand">
        <arguments>
            <argument name="commandPool" xsi:type="object">PaymentMagentoCcCommandPool</argument>
            <argument name="requestBuilder" xsi:type="object">PaymentMagentoCcVaultRequest</argument>
            <argument name="handler" xsi:type="object">PaymentMagentoCcVaultAuthorizeResponseHandlerComposite</argument>
            <argument name="transferFactory" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\Client\Card\CreateClient</argument>
            <argument name="validator" xsi:type="object">PaymentMagentoTransactionValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">PaymentMagentoVirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>

    <!-- Vault - Request -->
    <virtualType name="PaymentMagentoCcVaultRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="storeId" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\StoreIdDataRequest</item>
                <item name="card_init_schema" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\CardInitSchemaDataRequest</item>

                <item name="data_amountTotal" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Data\AmountDataRequest</item>
                <item name="data_currency" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Data\CurrencyDataRequest</item>
                <item name="data_customer_id" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Data\CustomerIdDataRequest</item>
                <item name="data_payment_data" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Data\Payment\PaymentDataRequest</item>
                <item name="data_payment_data_vault" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Data\Payment\VaultDataBuilder</item>

                <item name="data_additional_data" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Data\Additional\AdditionalInitSchemaDataRequest</item>
                
                <item name="data_additional_data_device" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Data\Additional\Device\DeviceDataRequest</item>

                <item name="data_additional_data_customer" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Data\Additional\Customer\CustomerDataRequest</item>
                <item name="data_additional_data_customer_document" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Data\Additional\Customer\TaxDocumentDataRequest</item>
                <item name="data_additional_data_customer_address" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Data\Additional\Customer\AddressDataRequest</item>

                <item name="data_additional_data_order" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Data\Additional\Order\Items\ItemsDataRequest</item>


                <item name="splitPayment" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\SplitPaymentDataRequest</item>
            </argument>
        </arguments>
    </virtualType>
    
    <!-- Vault - Authorization Response handlers -->
    <virtualType name="PaymentMagentoCcVaultAuthorizeResponseHandlerComposite" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="extOrdId" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\Card\ExtOrdIdHandler</item>
                <item name="txnIdCc" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\Card\TxnIdHandler</item>
                <item name="transaction" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\Card\TransactionAuthorizationHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Vault - Capture Response handlers -->
    <virtualType name="PaymentMagentoCcVaultCaptureResponseHandlerComposite" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="extOrdId" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\Card\ExtOrdIdHandler</item>
                <item name="txnIdCc" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\Card\TxnIdHandler</item>
                <item name="transaction" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\Card\TransactionCaptureHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- TwoCc - Commands infrastructure -->
    <virtualType name="PaymentMagentoTwoCcCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="authorize" xsi:type="string">PaymentMagentoCaptureTwoCcCommand</item>
                <item name="capture" xsi:type="string">PaymentMagentoCaptureTwoCcCommand</item>
                <item name="refund" xsi:type="string">PaymentMagentoTwoCcRefundCommand</item>
                <item name="cancel" xsi:type="string">PaymentMagentoTwoCcDenyPaymentCommand</item>
                <item name="void" xsi:type="string">PaymentMagentoTwoCcDenyPaymentCommand</item>
                <item name="accept_payment" xsi:type="string">PaymentMagentoTwoCcAcceptPaymentCommand</item>
                <item name="deny_payment" xsi:type="string">PaymentMagentoTwoCcDenyPaymentCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- TwoCc - Capture Commands -->
    <virtualType name="PaymentMagentoCaptureTwoCcCommand" type="Getnet\PaymentMagento\Gateway\Command\PaymentCommand">
        <arguments>
            <argument name="commandPool" xsi:type="object">PaymentMagentoTwoCcCommandPool</argument>
            <argument name="requestBuilder" xsi:type="object">PaymentMagentoTwoCcCaptureRequest</argument>
            <argument name="handler" xsi:type="object">PaymentMagentoTwoCcCaptureResponseHandlerComposite</argument>
            <argument name="transferFactory" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\Client\V1\TwoCc\CreateClient</argument>
            <argument name="validator" xsi:type="object">PaymentMagentoTransactionValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">PaymentMagentoVirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>

    <!-- TwoCc - Request -->
    <virtualType name="PaymentMagentoTwoCcCaptureRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="storeId" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\StoreIdDataRequest</item>

                <item name="sellerId" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\SellerIdDataRequest</item>

                <item name="amountTotal" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\V1\TwoCc\AmountAndTwoInterestDataRequest</item>
                <item name="dynamicMcc" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\V1\TwoCc\DynamicMccDataRequest</item>
                <item name="customer" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\V1\TwoCc\CustomerDataRequest</item>
                <item name="customerBillingAddress" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\V1\TwoCc\CustomerBillingAddressDataRequest</item>
                <item name="device" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\V1\TwoCc\DeviceDataRequest</item>

                
                <item name="order" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\V1\TwoCc\OrderDataRequest</item>
                <item name="shippings" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\V1\TwoCc\ShippingsDataRequest</item>
                <item name="taxDocument" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\V1\TwoCc\TaxDocumentDataRequest</item>
                <item name="paymentMethod" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\V1\TwoCc\TwoCcPaymentDataRequest</item>

                <item name="splitPayment" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\SplitPaymentDataRequest</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- TwoCc - Capture Payment Response handlers -->
    <virtualType name="PaymentMagentoTwoCcCaptureResponseHandlerComposite" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="extOrdId" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\V1\TwoCc\ExtOrdIdHandler</item>
                <item name="txnIdCc" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\V1\TwoCc\TxnIdHandler</item>
                <item name="transaction" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\V1\TwoCc\TransactionCaptureHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- TwoCc - Refund - Transaction Info Request -->
    <virtualType name="PaymentMagentoTwoCcRefundRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="storeId" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\StoreIdDataRequest</item>
                <item name="transaction" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\V1\TwoCc\Operations\TwoCcRefundRequest</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- TwoCc - Refund - Command -->
    <virtualType name="PaymentMagentoTwoCcRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">PaymentMagentoTwoCcRefundRequest</argument>
            <argument name="transferFactory" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\Client\V1\TwoCc\Operations\RefundClient</argument>
            <argument name="handler" xsi:type="object">PaymentMagentoTwoCcRefundResponseHandlerComposite</argument>
            <argument name="validator" xsi:type="object">PaymentMagentoTransactionValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">PaymentMagentoVirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>

    <!-- TwoCc - Refund - Info handlers -->
    <virtualType name="PaymentMagentoTwoCcRefundResponseHandlerComposite" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="refund" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\V1\TwoCc\Operations\RefundHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Cc - Refund - Command -->
    <virtualType name="PaymentMagentoRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">PaymentMagentoRefundRequest</argument>
            <argument name="transferFactory" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\Client\Card\Operations\RefundClient</argument>
            <argument name="handler" xsi:type="object">PaymentMagentoRefundResponseHandlerComposite</argument>
            <argument name="validator" xsi:type="object">PaymentMagentoTransactionValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">PaymentMagentoVirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>

    <!-- CC - Refund - Transaction Info Request -->
    <virtualType name="PaymentMagentoRefundRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="typeToDeny" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Operations\TypeDenyRequest</item>
                <item name="storeId" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\StoreIdDataRequest</item>
                <item name="idempotency_key" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Operations\IdempotencyKeyVoidDataRequest</item>
                <item name="payment_id" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Operations\ExtPaymentIdDataRequest</item>
                <item name="amountDenyTotal" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Operations\AmountRefundDataRequest</item>
                <item name="payment_method" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Operations\PaymentMethodDataRequest</item>
            </argument>
        </arguments>
    </virtualType>
    
    <!-- Cc - Refund - Info handlers -->
    <virtualType name="PaymentMagentoRefundResponseHandlerComposite" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="refund" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\Card\Operations\RefundHandler</item>
            </argument>
        </arguments>
    </virtualType>




    <!-- Two Cc - Accept Payment Command -->
    <virtualType name="PaymentMagentoTwoCcAcceptPaymentCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">PaymentMagentoTwoAcceptPaymentRequest</argument>
            <argument name="transferFactory" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\Client\V1\TwoCc\Operations\AcceptPaymentClient</argument>
            <argument name="handler" xsi:type="object">PaymentMagentoAccpetTwoCcPaymentResponseHandlerComposite</argument>
            <argument name="validator" xsi:type="object">PaymentMagentoTransactionValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">PaymentMagentoVirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>

    <!-- Two Cc - Accept Payment Request -->
    <virtualType name="PaymentMagentoTwoAcceptPaymentRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="storeId" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\StoreIdDataRequest</item>
                <item name="dataToPay" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\V1\TwoCc\Operations\DataForTwoCcRequest</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Two Cc - Accept Payment Request -->
    <virtualType name="PaymentMagentoTwoCcAcceptPaymentRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="storeId" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\StoreIdDataRequest</item>
                <item name="transaction" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\V1\TwoCc\Operations\ExtPaymentIdRequest</item>
                <item name="amountTotal" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\V1\TwoCc\Operations\AmountAndTwoInterestDataRequest</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Two Cc - Accept Payment handlers -->
    <virtualType name="PaymentMagentoAccpetTwoCcPaymentResponseHandlerComposite" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="accept" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\V1\TwoCc\Operations\AcceptPaymentHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Two Cc  - Deny Payment Command -->
    <virtualType name="PaymentMagentoTwoCcDenyPaymentCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">PaymentMagentoTwoCcDenyPaymentRequest</argument>
            <argument name="transferFactory" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\Client\V1\TwoCc\Operations\DenyPaymentClient</argument>
            <argument name="handler" xsi:type="object">PaymentMagentoTwoCcDenyPaymentResponseHandlerComposite</argument>
            <argument name="validator" xsi:type="object">PaymentMagentoTransactionValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">PaymentMagentoVirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>

    <!-- Two Cc - Deny Payment Request -->
    <virtualType name="PaymentMagentoTwoCcDenyPaymentRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="storeId" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\StoreIdDataRequest</item>
                
                <item name="extOrderId" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\V1\TwoCc\Operations\ExtPaymentIdRequest</item>
                <item name="dataToPay" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\V1\TwoCc\Operations\DataForTwoCcRequest</item>
                <item name="typeToDeny" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\V1\TwoCc\Operations\TypeDenyRequest</item>
            </argument>
        </arguments>
    </virtualType>
    
    <!-- Two Cc - Deny Payment handlers -->
    <virtualType name="PaymentMagentoTwoCcDenyPaymentResponseHandlerComposite" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="deny" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\V1\TwoCc\Operations\DenyPaymentHandler</item>
            </argument>
        </arguments>
    </virtualType>
   



    <!-- Cc - Accept Payment Command -->
    <virtualType name="PaymentMagentoAcceptPaymentCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">PaymentMagentoAcceptPaymentRequest</argument>
            <argument name="transferFactory" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\Client\Card\Operations\AcceptPaymentClient</argument>
            <argument name="handler" xsi:type="object">PaymentMagentoAccpetPaymentResponseHandlerComposite</argument>
            <argument name="validator" xsi:type="object">PaymentMagentoTransactionValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">PaymentMagentoVirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>

    <!-- Cc - Accept Payment Request -->
    <virtualType name="PaymentMagentoAcceptPaymentRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="storeId" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\StoreIdDataRequest</item>
                <item name="idempotency_key" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Operations\IdempotencyKeyDataRequest</item>
                <item name="payment_id" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Operations\ExtPaymentIdDataRequest</item>
                <item name="amount" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Operations\AmountAcceptDataRequest</item>
                <item name="payment_method" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Operations\PaymentMethodDataRequest</item>
            </argument>
        </arguments>
    </virtualType>
    
    <!-- Cc - Accept Payment handlers -->
    <virtualType name="PaymentMagentoAccpetPaymentResponseHandlerComposite" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="accept" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\Card\Operations\AcceptPaymentHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Cc - Deny Payment Command -->
    <virtualType name="PaymentMagentoDenyPaymentCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">PaymentMagentoDenyPaymentRequest</argument>
            <argument name="transferFactory" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\Client\Card\Operations\DenyPaymentClient</argument>
            <argument name="handler" xsi:type="object">PaymentMagentoDenyPaymentResponseHandlerComposite</argument>
            <argument name="validator" xsi:type="object">PaymentMagentoTransactionValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">PaymentMagentoVirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>

    <!-- Cc - Deny Payment Request -->
    <virtualType name="PaymentMagentoDenyPaymentRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="typeToDeny" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Operations\TypeDenyRequest</item>
                <item name="storeId" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\StoreIdDataRequest</item>
                <item name="idempotency_key" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Operations\IdempotencyKeyVoidDataRequest</item>
                <item name="payment_id" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Operations\ExtPaymentIdDataRequest</item>
                <item name="amountDenyTotal" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Operations\AmountDenyDataRequest</item>
                <item name="payment_method" xsi:type="string">Getnet\PaymentMagento\Gateway\Request\Card\Operations\PaymentMethodDataRequest</item>
            </argument>
        </arguments>
    </virtualType>
    
    <!-- Cc - Deny Payment handlers -->
    <virtualType name="PaymentMagentoDenyPaymentResponseHandlerComposite" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="deny" xsi:type="string">Getnet\PaymentMagento\Gateway\Response\Card\Operations\DenyPaymentHandler</item>
            </argument>
        </arguments>
    </virtualType>
   

    <!-- TwoCc - Deny Payment Command -->
    <virtualType name="PaymentMagentoTwoCcDenyPaymentCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">PaymentMagentoDenyPaymentRequest</argument>
            <argument name="transferFactory" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">Getnet\PaymentMagento\Gateway\Http\Client\Card\Operations\DenyPaymentClient</argument>
            <argument name="handler" xsi:type="object">PaymentMagentoTwoCcDenyPaymentResponseHandlerComposite</argument>
            <argument name="validator" xsi:type="object">PaymentMagentoTransactionValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">PaymentMagentoVirtualErrorMessageMapper</argument>
        </arguments>
    </virtualType>

    <!-- Base - Error Mapping -->
    <virtualType name="PaymentMagentoErrorMappingConfigReader" type="Magento\Payment\Gateway\ErrorMapper\VirtualConfigReader">
        <arguments>
            <argument name="fileName" xsi:type="string">getnet_error_mapping.xml</argument>
        </arguments>
    </virtualType>
    <virtualType name="PaymentMagentoErrorMappingData" type="Magento\Payment\Gateway\ErrorMapper\MappingData">
        <arguments>
            <argument name="reader" xsi:type="object">PaymentMagentoErrorMappingConfigReader</argument>
            <argument name="cacheId" xsi:type="string">getnet_error_mapper</argument>
        </arguments>
    </virtualType>
    <virtualType name="PaymentMagentoVirtualErrorMessageMapper" type="Magento\Payment\Gateway\ErrorMapper\ErrorMessageMapper">
        <arguments>
            <argument name="messageMapping" xsi:type="object">PaymentMagentoErrorMappingData</argument>
        </arguments>
    </virtualType>

    <!-- Base - Validator -->
    <virtualType name="PaymentMagentoTransactionValidator" type="Magento\Payment\Gateway\Validator\ValidatorComposite">
        <arguments>
            <argument name="chainBreakingValidators" xsi:type="array">
                <item name="general" xsi:type="boolean">true</item>
            </argument>
            <argument name="validators" xsi:type="array">
                <item name="general" xsi:type="string">Getnet\PaymentMagento\Gateway\Validator\GeneralResponseValidator</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- All - Implements Config Value Handler -->
    <virtualType name="PaymentMagentoValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">PaymentMagentoBaseConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoBaseConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">PaymentMagentoBaseConfig</argument>
        </arguments>
    </virtualType>
    
    <virtualType name="PaymentMagentoCcValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">PaymentMagentoCcConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoCcConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">PaymentMagentoCcConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoCcCommandManager" type="Magento\Payment\Gateway\Command\CommandManager">
        <arguments>
            <argument name="commandPool" xsi:type="object">PaymentMagentoCcCommandPool</argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoTwoCcValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">PaymentMagentoTwoCcConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoTwoCcConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">PaymentMagentoTwoCcConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoTwoCcCommandManager" type="Magento\Payment\Gateway\Command\CommandManager">
        <arguments>
            <argument name="commandPool" xsi:type="object">PaymentMagentoTwoCcCommandPool</argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoVaultPaymentValueHandlerPool" type="VaultPaymentValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">PaymentMagentoVaultPaymentValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    
    <virtualType name="PaymentMagentoVaultPaymentValueHandler" type="VaultPaymentDefaultValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">PaymentMagentoVaultPaymentConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoBoletoCommandManager" type="Magento\Payment\Gateway\Command\CommandManager">
        <arguments>
            <argument name="commandPool" xsi:type="object">PaymentMagentoBoletoCommandPool</argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoBoletoValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">PaymentMagentoBoletoConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoBoletoConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">PaymentMagentoBoletoConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoPixCommandManager" type="Magento\Payment\Gateway\Command\CommandManager">
        <arguments>
            <argument name="commandPool" xsi:type="object">PaymentMagentoPixCommandPool</argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoPixValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">PaymentMagentoPixConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoPixConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">PaymentMagentoPixConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoWalletCommandManager" type="Magento\Payment\Gateway\Command\CommandManager">
        <arguments>
            <argument name="commandPool" xsi:type="object">PaymentMagentoWalletCommandPool</argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoWalletValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">PaymentMagentoWalletConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoWalletConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">PaymentMagentoWalletConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoGetpayCommandManager" type="Magento\Payment\Gateway\Command\CommandManager">
        <arguments>
            <argument name="commandPool" xsi:type="object">PaymentMagentoGetpayCommandPool</argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoGetpayValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">PaymentMagentoGetpayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentMagentoGetpayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">PaymentMagentoGetpayConfig</argument>
        </arguments>
    </virtualType>

    <!-- All - Implements Config -->
    <virtualType name="PaymentMagentoLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">PaymentMagentoBaseConfig</argument>
        </arguments>
    </virtualType>

    <type name="Getnet\PaymentMagento\Gateway\Request\TwoCcRefundRequest">
        <arguments>
            <argument name="config" xsi:type="object">PaymentMagentoBaseConfig</argument>
        </arguments>
    </type>

    <type name="Getnet\PaymentMagento\Gateway\Request\PaymentMagentoDenyPaymentRequest">
        <arguments>
            <argument name="config" xsi:type="object">PaymentMagentoBaseConfig</argument>
        </arguments>
    </type>

    <type name="Getnet\PaymentMagento\Gateway\Request\AuthorizationRequest">
        <arguments>
            <argument name="config" xsi:type="object">PaymentMagentoBaseConfig</argument>
        </arguments>
    </type>

    <type name="Getnet\PaymentMagento\Gateway\Request\CreateOrderAuthorizationRequest">
        <arguments>
            <argument name="config" xsi:type="object">PaymentMagentoBaseConfig</argument>
        </arguments>
    </type>

    <type name="Getnet\PaymentMagento\Gateway\Request\AuthorizationRequest">
        <arguments>
            <argument name="config" xsi:type="object">PaymentMagentoBaseConfig</argument>
        </arguments>
    </type>

    <type name="Getnet\PaymentMagento\Gateway\Request\V1\Wallet\Operations\FetchTransactionInfoRequest">
        <arguments>
            <argument name="config" xsi:type="object">PaymentMagentoBaseConfig</argument>
        </arguments>
    </type>

    <type name="Getnet\PaymentMagento\Gateway\Request\V1\Getpay\Operations\FetchTransactionInfoRequest">
        <arguments>
            <argument name="config" xsi:type="object">PaymentMagentoBaseConfig</argument>
        </arguments>
    </type>

    <!-- All - Implements Logger -->
    <type name="Getnet\PaymentMagento\Gateway\Validator\GeneralResponseValidator">
        <arguments>
            <argument name="logger" xsi:type="object">PaymentMagentoLogger</argument>
        </arguments>
    </type>

    <type name="Getnet\PaymentMagento\Controller\Notification\All">
        <arguments>
            <argument name="logger" xsi:type="object">PaymentMagentoLogger</argument>
        </arguments>
    </type>

    <type name="Getnet\PaymentMagento\Cron\FetchTransactionOrderWallet">
        <arguments>
            <argument name="logger" xsi:type="object">PaymentMagentoLogger</argument>
        </arguments>
    </type>

     <type name="Getnet\PaymentMagento\Cron\FetchTransactionRefund">
        <arguments>
            <argument name="logger" xsi:type="object">PaymentMagentoLogger</argument>
        </arguments>
    </type>

    <type name="Getnet\PaymentMagento\Cron\FetchTransactionOrderGetpay">
        <arguments>
            <argument name="logger" xsi:type="object">PaymentMagentoLogger</argument>
        </arguments>
    </type>

    <type name="Getnet\PaymentMagento\Model\Console\Command\Marketplace\PaymentRelease">
        <arguments>
            <argument name="logger" xsi:type="object">PaymentMagentoLogger</argument>
        </arguments>
    </type>

    <type name="Getnet\PaymentMagento\Gateway\Client\Api">
        <arguments>
            <argument name="config" xsi:type="object">PaymentMagentoBaseConfig</argument>
        </arguments>
    </type>

    <type name="Getnet\PaymentMagento\Gateway\Http\Api">
        <arguments>
            <argument name="logger" xsi:type="object">PaymentMagentoLogger</argument>
        </arguments>
    </type>

    <type name="Getnet\PaymentMagento\Model\ApiManagement">
        <arguments>
            <argument name="config" xsi:type="object">PaymentMagentoBaseConfig</argument>
        </arguments>
    </type>

    <type name="Getnet\PaymentMagento\Model\ApiManagement">
        <arguments>
            <argument name="logger" xsi:type="object">PaymentMagentoLogger</argument>
        </arguments>
    </type>

</config>
